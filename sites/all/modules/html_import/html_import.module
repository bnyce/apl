<?php
	function html_import_menu() {
	  $items = array();
	  $items['cityclerk/htmlimporter'] = array(
    		'title' => 'City Clerk HTML Updater',
    		'page callback' => 'html_importer',
    		'access arguments' => array('City Clerk html importer'),
    		'type' => MENU_CALLBACK
  	  );
	  return $items;
	}

	function html_import_permission() {
  	    $perms = array(
    		'City Clerk html importer' => array(
      		'title' => t('City Clerk html importer'),
    	     	 )
          );
 	   return $perms;
	}

	function html_importer(){
  		$path="C:/Documents and Settings/nandigamS/My Documents/cityclerk/";
  		$returnVal = '<b>Starting html file import</b><br>';
  		if($handle=opendir($path)){
    			$time_stamp="";
    			while (false !== ($file0 = readdir($handle))) {
      		$recent_dir="";
      		if ($file0 != "." && $file0 != "..") {   //    strip out . and ..
        			$returnVal .= $file0."<br/>";
        			$file_name=explode("_",$file0);
				$file_name_prefix=substr($file_name[0],0,2);
				$file_name[0]=substr($file_name[0],2,strlen($file_name[0]));
        			$seconds=substr($file_name[1],0,2);
        			$minuts=substr($file_name[1],2,2);
        			$hours=substr($file_name[1],4,2);
        			$file_name[1]=$hours.$minuts.$seconds;
        			$time_stamp[]=strtotime($file_name[0].$file_name[1]);
      		}
    		 }
    		$recent_dir= max($time_stamp);
    		$recent_dir_date=$file_name_prefix.date('Ymd_siH',$recent_dir);
    		$new_path=$path.$recent_dir_date;
    		$returnVal .= $new_path."<br/>";
		closedir($handle);
    		if($handle1=opendir($new_path)){
      		while (false !== ($file1 = readdir($handle1))) {
        			if ($file1 != "." && $file1 != "..") {   //    strip out . and ..
          				$returnVal .= $file1."<br/><br/>";
          				$new_path1=$new_path.'/'.$file1;
          				$returnVal .= $new_path1."<br/>";
          				if($handle2=opendir($new_path1)){
            				while (false !== ($file2 = readdir($handle2))) {
              					if ($file2 != "." && $file2 != "..") {   //    strip out . and ..
                						$returnVal .= $file2."<br/>";
                						$new_path2=$new_path1.'/'.$file2;
								$returnVal .= $new_path2."<br/>";
                						if($file2=="boards" or $file2=="meetings"){
				  					$Title="";
                  						if($handle3=opendir($new_path2)){
                    							while (false !== ($file = readdir($handle3))) {
                      								$buffer1="";
                      								if ($file != "." && $file != "..") {   //    strip out . and ..
                      	 								$file_name=$file;
                         								$new_path3=$new_path2.'/'.$file;
                         								$buffer1=file_get_contents($new_path3);
                         								$result = db_query("select title,nid,created from {node} where title='$file_name'");
						 						foreach ($result as $record){
							 						$Title = $record->title;
							 						$Created = $record->created;
							 						$Nid = $record->nid;
						 						}
						 						$returnVal .= $file_name."------file_name<br/>";
												//*********************************Node_Update******************************
                        								if($Title==$file_name){ // Comparing filename with existing node name
                          									$returnVal .= "Node Found<br/>";
                          									$file_timestamp=filemtime($new_path3);
                          									$returnVal .= $file_timestamp."-------Timestamp<br/>";
                          									$returnVal .= $Created ."-------created time<br/>";
                          									if($Created == $file_timestamp){  
                            										$returnVal .= "<span style='color:green'>There is no change in timestamp,So no need to update</span><br/><br/>";
                          									}else{
                            										//define('DRUPAL_ROOT', getcwd());
                            										$_SERVER['REMOTE_ADDR'] = "localhost"; // Necessary if running from command line
                            										require_once DRUPAL_ROOT . '/includes/bootstrap.inc';
                            										drupal_bootstrap(DRUPAL_BOOTSTRAP_FULL);
                            										$bodytext = $buffer1; // Body part of the html file
                            										$nid = $Nid; // The node to update
                            										$node = node_load($nid); // ...where $nid is the node id
                            										$node->title = $file_name;
                            										$node->body[$node->language][0]['value']   = $bodytext;
                            										if($node = node_submit($node)) { // Prepare node for saving
                             											 node_save($node);
                             											 $returnVal .= "<span style='color:red'>Node with nid " . $node->nid . " updated!</span><br/><br/>";
                            										}
														@db_query("UPDATE {node} SET created=$file_timestamp WHERE title='$file_name'")or die(mysql_error());
                          									}
						  
                        								//*********************************New_Node_Creation******************************
                        								}elseif(!($Title==$file_name)){
                          									$returnVal .= "<span style='color:red'>Node not Found</span><br/><span style='color:green'>New node created</span><br/>";
                          									//define('DRUPAL_ROOT', getcwd());
                          									$_SERVER['REMOTE_ADDR'] = "localhost"; // Necessary if running from command line
                          									require_once DRUPAL_ROOT . '/includes/bootstrap.inc';
                          									drupal_bootstrap(DRUPAL_BOOTSTRAP_FULL);
                          									$file_timestamp=filemtime($new_path3);
                          									$bodytext = $buffer1; // Body part of the html file
                          									$node = new stdClass(); // Create a new node object
                          									$node->type = "city_clerk_content"; // or page, or whatever content type you like
                          									node_object_prepare($node); // Set some default values
                          									$node->title    = $file_name;  // Assigning node title = file name
                          									$node->language = 'en'; // Or e.g. 'en' if locale is enabled (en =English)
                          									$node->status = 1;  //Published(1) or not(0)
                          									$node->promote = 0; //Prompted to front page
                          									$node->sticky = 0;  //Sticky at top of list
                          									$node->comment = 1; //Comments on=2, comments off=1
                          									$node->uid = 71; // UID of the author of the node; or use $node->name
                          									$node->body[$node->language][0]['value']   = $bodytext;
                          									$node->body[$node->language][0]['format']  = 'full_html';
                          									$node->remote_timestamp = $file_timestamp;
                          									$returnVal .= "Node Timestamp==".$node->remote_timestamp."<br/>";
                          									// using pathauto, which would override the below path
                          									if($file2=="meetings"){
														$path = "meetings/".$file_name;
							 							$returnVal .= $path."-------path----<br/>";
						  							}elseif($file2=="boards"){
							 							$path = "boards/".$file_name;
							 							$returnVal .= $path."--------path----<br/>";
						  							}
                          									//$path = $file_name;
                          									$node->path = array('alias' => $path);   //alias path
                          									if($node = node_submit($node)) { // Prepare node for saving
                            										node_save($node);
                            										$returnVal .= "<span style='color:green'>Node with nid</span> <span style='color:red'>" . $node->nid . "</span> <span style='color:green'>saved!</span><br/>";
                          									}
                          									@db_query("UPDATE {node} SET created=$file_timestamp WHERE title='$file_name'")or die(mysql_error());
                          									$returnVal .= "<span style='color:blue'>Success...</span><br/><br/>";
                        								}//end elseif
                      								}//end if
                    							}//end while
                    							@mysql_close();
				  					}
                						}
              					}
            				}
          				}
       			 }
      		}
    		}
		closedir($handle1);
  		closedir($handle2);
  		closedir($handle3);
  	}else{ $returnVal .= 'Could not open ' . $path . '.  Import failed'; }
  		return $returnVal;
  		exit;
}
/*
function html_import_theme() {
   return array(
      'html_import_javascript' => array(
         'arguments' => array(),
      ),
   );
}

function html_import_init() {
  theme('html_import_javascript');
}

function theme_html_import_javascript() {
  drupal_add_js(drupal_get_path('module', 'calendar_update') . '/calendar_update.js');
}
*/
