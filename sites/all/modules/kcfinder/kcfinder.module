<?php
/**
* Valid permissions for this module
* @return array An array of valid permissions for the onthisdate module
*/

function kcfinder_permission() {
  return array(
    'access kcfinder' => array(
      'title' => t('Access KCFinder'),
      'description' => t('Access KCFinder file browser')
    )
  );
}

/**
* Define KCFinder path.
*/

function kcfinder_pathfind() {

      // set KCfinder settings, find out if the cleanURLS enadled
      $kcfinderAltPath = variable_get('kcfinder_alt_path', '');
	  $cleanURLsEnabled = variable_get('clean_url', 0);
	  
	  // prepare the path to kcfinder files directory
	  if ($kcfinderAltPath != '') {
	    if ($cleanURLsEnabled) {
		  return url($kcfinderAltPath);
		} else {
		  return $kcfinderAltPath;
		}
	  }
	  else {
	    if ($cleanURLsEnabled) {
		  return url(drupal_get_path('module', 'kcfinder') . '/kcfinder_files/');
		}
		else {
		  return drupal_get_path('module', 'kcfinder') . '/kcfinder_files/';
		}
	  }
}

/**
* WYSIWYG KCFinder integration.
*/

function kcfinder_wysiwyg_editor_settings_alter(&$settings, &$context) {
  if (user_access('access kcfinder')) {
    
    if ($context['profile']->editor == 'ckeditor') {
      $kcfinderFilesPath = kcfinder_pathfind();
	  	  
	  $settings['filebrowserImageBrowseUrl'] = $kcfinderFilesPath . 'browse.php?type=images';
      $settings['filebrowserBrowseUrl'] = $kcfinderFilesPath . 'browse.php?type=files';
      $settings['filebrowserFlashBrowseUrl'] = $kcfinderFilesPath . 'browse.php?type=flash';
      $settings['filebrowserUploadUrl'] = $kcfinderFilesPath . 'upload.php?type=files';
      $settings['filebrowserImageUploadUrl'] = $kcfinderFilesPath . 'upload.php?type=images';
      $settings['filebrowserFlashUploadUrl'] = $kcfinderFilesPath . 'upload.php?type=flash';
    }
  }
}

/**
* Implements hook_menu().
*/

function kcfinder_menu() {
  $items = array(); 

  $items['admin/config/content/kcfinder'] = array(
    'title' => 'KCFinder module settings',
    'description' => 'Configuration for KCFinder integration module',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('kcfinder_form'),
    'access arguments' => array('access administration pages'),
    'type' => MENU_NORMAL_ITEM
  );

  $items['user/%user/kcfinder/files'] = array(
    'title' => 'File browser',
    'page callback' => 'theme_kcfinder_user_page',
    //'page arguments' => array(1),
    //'access callback' => 'kcfinder_user_page_access',
    'access arguments' => array('Access KCFinder'),
    //'file' => 'kcfinder_files/browse.php',
    'type' => MENU_LOCAL_TASK,
    'weight' => 5,
  );
  
  $items['user/%user/kcfinder/images'] = array(
    'title' => 'Image browser',
    'page callback' => 'theme_kcfinder_user_image_page',
    //'page arguments' => array(1),
    //'access callback' => 'kcfinder_user_page_access',
    'access arguments' => array('Access KCFinder'),
    //'file' => 'kcfinder_files/browse.php',
    'type' => MENU_LOCAL_TASK,
    'weight' => 6,
  );
  
  return $items;
}  

/**
* Form function, called by drupal_get_form()
* in kcfinder_menu().
*/

function kcfinder_form($form, &$form_state) {
 $form['kcfinder_upload_url'] = array(
    '#type' => 'textfield',
    '#title' => t('Upload path URL'),
    '#default_value' => variable_get('kcfinder_upload_url', 'sites/default/files/kcfinder'),
    '#size' => 90,
    '#maxlength' => 90,
    '#description' => t("URL path to uploaded files' base directory, relative to Drupal root. Make sure this directory exists and is writable by the internet user (CHMOD 777). If you want to have different folders for different users, add %u (user ID) or %n (user name) at the end of the path (example: 'sites/default/files/kcfinder/%u')")
  );
  $form['kcfinder_alt_path'] = array(
    '#type' => 'textfield',
    '#title' => t('KCFinder alternative path'),
    '#default_value' => variable_get('kcfinder_alt_path', ''),
    '#size' => 90,
    '#maxlength' => 90,
    '#description' => t('If for some reason, you want to use a different KCFinder folder than the one provided within this module, insert here the path to that folder, relative to Drupal root. Leave blank otherwise. (Example: sites/all/libraries/kcfinder/).')
  );
   
  $form['kcfinder_upload_dir'] = array(
    '#type' => 'textfield',
    '#title' => t('Upload path filesystem directory'),
    '#default_value' => variable_get('kcfinder_upload_dir', ''),
    '#size' => 90,
    '#maxlength' => 90,
    '#description' => t("Local filesystem path to main uploaded files directory. If you leave this setting empty, KCFinder will try to suggest it regarding uploadURL setting. Fill this setting only if KCFinder can't fetch the path automaticaly.")
  );
  
  return system_settings_form($form);
}

/**
 * This function called after being registered inside hook_theme. 
 * Returns the html for user's file browser tab.
 */

function theme_kcfinder_user_page() {
  
  $kcfinderPath = kcfinder_pathfind();
  return '<iframe src="' . $kcfinderPath . 'browse.php?type=files" frameborder="0" style="border: 1px solid #eee; width: 99%; height: 520px" class="imce-frame"></iframe>';
}

/**
 * This function called after being registered inside hook_theme. 
 * Returns the html for user's image browser tab.
 */

function theme_kcfinder_user_image_page() {
  
  $kcfinderPath = kcfinder_pathfind();
  return '<iframe src="' . $kcfinderPath . 'browse.php?type=images" frameborder="0" style="border: 1px solid #eee; width: 99%; height: 520px" class="imce-frame"></iframe>';
}

/**
 * Implements hook_theme().
 */

function kcfinder_theme() {

  $theme['kcfinder_user_page'] = array(
  	'variables' => array(),
  );
  
  $theme['kcfinder_user_image_page'] = array(
  	'variables' => array(),
  );
  
  return $theme;
}

/**
 * Implements hook_uninstall().
 */

function kcfinder_uninstall() {
	variable_del('kcfinder_upload_url');
	variable_del('kcfinder_alt_path');
	variable_del('kcfinder_upload_dir');
}